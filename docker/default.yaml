networks:
  network:
    driver: bridge
services:
  mysql:
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: ndock_mysql
    environment:
      MYSQL_DATABASE: database
      MYSQL_PASSWORD: docker
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: docker
      TZ: Asia/Tokyo
    image: mysql:8
    # entrypoint: /entrypoint.sh
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
    networks:
      - network
    ports:
      # - 3306:3306
      - 13306:3306
    volumes:
      - ../volumes/mysql/pool:/var/lib/mysql
      - ../volumes/mysql/conf.d:/etc/mysql/conf.d
      # - ../volumes/mysql/conf.d:/etc/mysql/conf.d
      - ../volumes/mysql/sql:/docker-entrypoint-initdb.d
      # - ./images/mysql/entrypoint.sh:/entrypoint.sh
  nginx:
    container_name: ndock_nginx
    # depends_on:
    #   - php-fpm
    image: nginx:1.19
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
    networks:
      - network
    ports:
      - 80:80
    volumes:
      - ../volumes/www:/var/www
      - ../volumes/logs/nginx:/var/log/nginx
      - ./images/nginx/main.conf:/etc/nginx/conf.d/default.conf
  express:
    container_name: ndock_express
    image: node:14.15.1
    build: ./images/express
    working_dir: /home/node/express
    # - sh -c 'usermod -o -u ${UID} www-data; groupmod -o -g ${UID} www-data;'
    command:
      [sh, -c, yarn install && yarn build && yarn next:build && yarn next:start]
    # entrypoint: /entrypoint.sh
    networks:
      - network
    ports:
      - 3000:3000
    volumes:
      - ../volumes/www/express:/home/node/express:rw
      # - ./images/express/entrypoint.sh:/entrypoint.sh
  python:
    container_name: ndock_python
    image: python:3
    build: ./images/python
    entrypoint: /entrypoint.sh
    networks:
      - network
    ports:
      - 8000:8000
    working_dir: /code
    volumes:
      - ../volumes/home/django:/code:rw
      - ./images/python/entrypoint.sh:/entrypoint.sh
  rust:
    container_name: ndock_rust
    # image: rust:1.49
    build:
      context: ./images/rust
      args:
        - UID=$UID
    entrypoint: /entrypoint.sh
    networks:
      - network
    ports:
      - 8888:8888
    # working_dir: /code
    # command: bash -c 'usermod -o -u ${UID} www-data; groupmod -o -g ${UID} www-data;'
    # command: bash -c 'useradd -m -u ${UID} docker'
    volumes:
      - ../volumes/home/rust:/code:rw
      - ./images/rust/entrypoint.sh:/entrypoint.sh
  php-fpm:
    container_name: ndock_php-fpm
    image: php:20201203
    build: ./images/php-fpm
    command: bash -c 'usermod -o -u ${UID} www-data; groupmod -o -g ${UID} www-data; php-fpm'
    environment:
      TZ: Asia/Tokyo
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
    networks:
      - network
    volumes:
      - ./images/php-fpm/php.ini.main:/usr/local/etc/php/php.ini
      - ../volumes/www:/var/www
      - ../volumes/logs/php-fpm:/var/log/php-fpm
  php-apache:
    container_name: ndock_php-apache
    build: ./images/php-apache
    command:
      bash -c 'usermod -o -u ${UID} www-data; groupmod -o -g ${UID} www-data;
      php-fpm'
    environment:
      TZ: Asia/Tokyo
    image: php:20201127
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
    networks:
      - network
    volumes:
      - ./images/php/php.ini.main:/usr/local/etc/php/php.ini
      - ../volumes/www/:/var/www
      - ../volumes/logs/php-fpm:/var/log/php-fpm
  phpmyadmin:
    container_name: ndock_phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=docker
      - PMA_PASSWORD=docker
    ports:
      - 8080:80
    volumes:
      - /sessions
    networks:
      - network
version: "3"
